const shift = require("./algorithm")._shift;

test('shift [5] right by 3', () => {
    expect(shift([1, 2, 3, 4, 5], "right", 3)).toEqual([3, 4, 5, 1, 2]);
});

test('shift [7] left by 10', () => {
    expect(shift([1, 2, 3, 4, 5, 6, 7], "left", 10)).toEqual([4, 5, 6, 7, 1, 2, 3]);
});

test('shift [3] right by 1', () => {
    expect(shift(["Hello", "Name", "My"], "right", 1)).toEqual(["My", "Hello", "Name"]);
});

test('shift [4] left by 20', () => {
    expect(shift([false, true, true, false], "left", 20)).toEqual([false, true, true, false]);
});

test('shift [100] right by 78', () => {
    expect(shift([412, 2020, 2773, 3025, 3345, 700, 2418, 2924, 1533, 2207, 3550, 3537, 3514, 3647, 3025, 2876, 2049, 1801, 2895, 1257, 569, 1415, 3411, 1586, 2330, 2993, 3917, 764, 3718, 2524, 656, 3485, 1518, 499, 1997, 2461, 2911, 449, 3761, 3985, 3884, 2670, 2695, 67, 3017, 3974, 344, 498, 1031, 3893, 2359, 3242, 2399, 876, 3375, 3596, 972, 3445, 2226, 2529, 3110, 1239, 1408, 1111, 2332, 1095, 3521, 1921, 1464, 2809, 398, 907, 1951, 2011, 2029, 1528, 2294, 1752, 2247, 2268, 2549, 1206, 1947, 3853, 2498, 766, 3643, 1704, 57, 2767, 3654, 645, 1033, 809, 3146, 520, 1289, 3641, 289, 1922],
            "right",
            78))
        .toEqual([3411, 1586, 2330, 2993, 3917, 764, 3718, 2524, 656, 3485, 1518, 499, 1997, 2461, 2911, 449, 3761, 3985, 3884, 2670, 2695, 67, 3017, 3974, 344, 498, 1031, 3893, 2359, 3242, 2399, 876, 3375, 3596, 972, 3445, 2226, 2529, 3110, 1239, 1408, 1111, 2332, 1095, 3521, 1921, 1464, 2809, 398, 907, 1951, 2011, 2029, 1528, 2294, 1752, 2247, 2268, 2549, 1206, 1947, 3853, 2498, 766, 3643, 1704, 57, 2767, 3654, 645, 1033, 809, 3146, 520, 1289, 3641, 289, 1922, 412, 2020, 2773, 3025, 3345, 700, 2418, 2924, 1533, 2207, 3550, 3537, 3514, 3647, 3025, 2876, 2049, 1801, 2895, 1257, 569, 1415]);
});

test('shift [100] right by 3', () => {
    expect(shift([412, 2020, 2773, 3025, 3345, 700, 2418, 2924, 1533, 2207, 3550, 3537, 3514, 3647, 3025, 2876, 2049, 1801, 2895, 1257, 569, 1415, 3411, 1586, 2330, 2993, 3917, 764, 3718, 2524, 656, 3485, 1518, 499, 1997, 2461, 2911, 449, 3761, 3985, 3884, 2670, 2695, 67, 3017, 3974, 344, 498, 1031, 3893, 2359, 3242, 2399, 876, 3375, 3596, 972, 3445, 2226, 2529, 3110, 1239, 1408, 1111, 2332, 1095, 3521, 1921, 1464, 2809, 398, 907, 1951, 2011, 2029, 1528, 2294, 1752, 2247, 2268, 2549, 1206, 1947, 3853, 2498, 766, 3643, 1704, 57, 2767, 3654, 645, 1033, 809, 3146, 520, 1289, 3641, 289, 1922],
            "right",
            3))
        .toEqual([3641, 289, 1922, 412, 2020, 2773, 3025, 3345, 700, 2418, 2924, 1533, 2207, 3550, 3537, 3514, 3647, 3025, 2876, 2049, 1801, 2895, 1257, 569, 1415, 3411, 1586, 2330, 2993, 3917, 764, 3718, 2524, 656, 3485, 1518, 499, 1997, 2461, 2911, 449, 3761, 3985, 3884, 2670, 2695, 67, 3017, 3974, 344, 498, 1031, 3893, 2359, 3242, 2399, 876, 3375, 3596, 972, 3445, 2226, 2529, 3110, 1239, 1408, 1111, 2332, 1095, 3521, 1921, 1464, 2809, 398, 907, 1951, 2011, 2029, 1528, 2294, 1752, 2247, 2268, 2549, 1206, 1947, 3853, 2498, 766, 3643, 1704, 57, 2767, 3654, 645, 1033, 809, 3146, 520, 1289]);
});

test('shift [100] left by 84', () => {
    expect(shift([412, 2020, 2773, 3025, 3345, 700, 2418, 2924, 1533, 2207, 3550, 3537, 3514, 3647, 3025, 2876, 2049, 1801, 2895, 1257, 569, 1415, 3411, 1586, 2330, 2993, 3917, 764, 3718, 2524, 656, 3485, 1518, 499, 1997, 2461, 2911, 449, 3761, 3985, 3884, 2670, 2695, 67, 3017, 3974, 344, 498, 1031, 3893, 2359, 3242, 2399, 876, 3375, 3596, 972, 3445, 2226, 2529, 3110, 1239, 1408, 1111, 2332, 1095, 3521, 1921, 1464, 2809, 398, 907, 1951, 2011, 2029, 1528, 2294, 1752, 2247, 2268, 2549, 1206, 1947, 3853, 2498, 766, 3643, 1704, 57, 2767, 3654, 645, 1033, 809, 3146, 520, 1289, 3641, 289, 1922],
            "left",
            84))
        .toEqual([2498, 766, 3643, 1704, 57, 2767, 3654, 645, 1033, 809, 3146, 520, 1289, 3641, 289, 1922, 412, 2020, 2773, 3025, 3345, 700, 2418, 2924, 1533, 2207, 3550, 3537, 3514, 3647, 3025, 2876, 2049, 1801, 2895, 1257, 569, 1415, 3411, 1586, 2330, 2993, 3917, 764, 3718, 2524, 656, 3485, 1518, 499, 1997, 2461, 2911, 449, 3761, 3985, 3884, 2670, 2695, 67, 3017, 3974, 344, 498, 1031, 3893, 2359, 3242, 2399, 876, 3375, 3596, 972, 3445, 2226, 2529, 3110, 1239, 1408, 1111, 2332, 1095, 3521, 1921, 1464, 2809, 398, 907, 1951, 2011, 2029, 1528, 2294, 1752, 2247, 2268, 2549, 1206, 1947, 3853]);
});

test('shift [100] right by 21', () => {
    expect(shift([412, 2020, 2773, 3025, 3345, 700, 2418, 2924, 1533, 2207, 3550, 3537, 3514, 3647, 3025, 2876, 2049, 1801, 2895, 1257, 569, 1415, 3411, 1586, 2330, 2993, 3917, 764, 3718, 2524, 656, 3485, 1518, 499, 1997, 2461, 2911, 449, 3761, 3985, 3884, 2670, 2695, 67, 3017, 3974, 344, 498, 1031, 3893, 2359, 3242, 2399, 876, 3375, 3596, 972, 3445, 2226, 2529, 3110, 1239, 1408, 1111, 2332, 1095, 3521, 1921, 1464, 2809, 398, 907, 1951, 2011, 2029, 1528, 2294, 1752, 2247, 2268, 2549, 1206, 1947, 3853, 2498, 766, 3643, 1704, 57, 2767, 3654, 645, 1033, 809, 3146, 520, 1289, 3641, 289, 1922],
            "left",
            21))
        .toEqual([1415, 3411, 1586, 2330, 2993, 3917, 764, 3718, 2524, 656, 3485, 1518, 499, 1997, 2461, 2911, 449, 3761, 3985, 3884, 2670, 2695, 67, 3017, 3974, 344, 498, 1031, 3893, 2359, 3242, 2399, 876, 3375, 3596, 972, 3445, 2226, 2529, 3110, 1239, 1408, 1111, 2332, 1095, 3521, 1921, 1464, 2809, 398, 907, 1951, 2011, 2029, 1528, 2294, 1752, 2247, 2268, 2549, 1206, 1947, 3853, 2498, 766, 3643, 1704, 57, 2767, 3654, 645, 1033, 809, 3146, 520, 1289, 3641, 289, 1922, 412, 2020, 2773, 3025, 3345, 700, 2418, 2924, 1533, 2207, 3550, 3537, 3514, 3647, 3025, 2876, 2049, 1801, 2895, 1257, 569]);
});

test("shift very large array", () => {
    expect(shift([210309, 812087, 79491, 322214, 316326, 375285, 169609, 827245, 702826, 740432, 467843, 8570, 519706, 784040, 839829, 446917, 973292, 456340, 945872, 631183, 594844, 135681, 428383, 699250, 174068, 756217, 598868, 850543, 722592, 104098, 600998, 75864, 399295, 132731, 763836, 517644, 61615, 706507, 552641, 482134, 358059, 527833, 319056, 376503, 832193, 323065, 533464, 256945, 374617, 448726, 94987, 917378, 30068, 729349, 65062, 830479, 898589, 590446, 116772, 246349, 829194, 668124, 273186, 627493, 905482, 121891, 237838, 210720, 480465, 299148, 708654, 573237, 25022, 499992, 343432, 887001, 305735, 707181, 242277, 20684, 384182, 422246, 816317, 172632, 357584, 490464, 969983, 63280, 973422, 987927, 76587, 197216, 283101, 921916, 339638, 974780, 484823, 208510, 180201, 285739, 687362, 797842, 985080, 269988, 989156, 203445, 530721, 288456, 556534, 960194, 74586, 585034, 902145, 819397, 260206, 409276, 177153, 29296, 582879, 487633, 424264, 335415, 333991, 467626, 806674, 784647, 133631, 882873, 481549, 567074, 936389, 624361, 540639, 923103, 659630, 980723, 311267, 92613, 133818, 113563, 406052, 490095, 364970, 324585, 512566, 904568, 107002, 194462, 654049, 689320, 200420, 369116, 315784, 823365, 970700, 797795, 68477, 523411, 796904, 81478, 186889, 689070, 367613, 627071, 176910, 328645, 556662, 232808, 64934, 433292, 757685, 207965, 86292, 985639, 708484, 733641, 780023, 746489, 228565, 865143, 502107, 633728, 174942, 447409, 852859, 235118, 870594, 287920, 315178, 411569, 299221, 186648, 568585, 259276, 630125, 143661, 135099, 83773, 219667, 554803, 311667, 2233, 751450, 262289, 264032, 993801, 879950, 18010, 124603, 348779, 208050, 6304, 651061, 139102, 918423, 956740, 668510, 755429, 220738, 705987, 735626, 567686, 64012, 94655, 539842, 603694, 551138, 506530, 742168, 729394, 953819, 704952, 588759, 376950, 677069, 978305, 220657, 318634, 125988, 222450, 344166, 773810, 396604, 783642, 483364, 164073, 287487, 226393, 69969, 234817, 478737, 816125, 257906, 899409, 699687, 982091, 905228, 926999, 731472, 281025, 283867, 807281, 918895, 740586, 989245, 111477, 113021, 111930, 90619, 440084, 744417, 335266, 481598, 956690, 253516, 629142, 470274, 406342, 258674, 727106, 39931, 67829, 230119, 529142, 852529, 507414, 928675, 96470, 453161, 512164, 26270, 835665, 96196, 85980, 39784, 232330, 225319, 916400, 168870],
            "right",
            243))
        .toEqual([898589, 590446, 116772, 246349, 829194, 668124, 273186, 627493, 905482, 121891, 237838, 210720, 480465, 299148, 708654, 573237, 25022, 499992, 343432, 887001, 305735, 707181, 242277, 20684, 384182, 422246, 816317, 172632, 357584, 490464, 969983, 63280, 973422, 987927, 76587, 197216, 283101, 921916, 339638, 974780, 484823, 208510, 180201, 285739, 687362, 797842, 985080, 269988, 989156, 203445, 530721, 288456, 556534, 960194, 74586, 585034, 902145, 819397, 260206, 409276, 177153, 29296, 582879, 487633, 424264, 335415, 333991, 467626, 806674, 784647, 133631, 882873, 481549, 567074, 936389, 624361, 540639, 923103, 659630, 980723, 311267, 92613, 133818, 113563, 406052, 490095, 364970, 324585, 512566, 904568, 107002, 194462, 654049, 689320, 200420, 369116, 315784, 823365, 970700, 797795, 68477, 523411, 796904, 81478, 186889, 689070, 367613, 627071, 176910, 328645, 556662, 232808, 64934, 433292, 757685, 207965, 86292, 985639, 708484, 733641, 780023, 746489, 228565, 865143, 502107, 633728, 174942, 447409, 852859, 235118, 870594, 287920, 315178, 411569, 299221, 186648, 568585, 259276, 630125, 143661, 135099, 83773, 219667, 554803, 311667, 2233, 751450, 262289, 264032, 993801, 879950, 18010, 124603, 348779, 208050, 6304, 651061, 139102, 918423, 956740, 668510, 755429, 220738, 705987, 735626, 567686, 64012, 94655, 539842, 603694, 551138, 506530, 742168, 729394, 953819, 704952, 588759, 376950, 677069, 978305, 220657, 318634, 125988, 222450, 344166, 773810, 396604, 783642, 483364, 164073, 287487, 226393, 69969, 234817, 478737, 816125, 257906, 899409, 699687, 982091, 905228, 926999, 731472, 281025, 283867, 807281, 918895, 740586, 989245, 111477, 113021, 111930, 90619, 440084, 744417, 335266, 481598, 956690, 253516, 629142, 470274, 406342, 258674, 727106, 39931, 67829, 230119, 529142, 852529, 507414, 928675, 96470, 453161, 512164, 26270, 835665, 96196, 85980, 39784, 232330, 225319, 916400, 168870, 210309, 812087, 79491, 322214, 316326, 375285, 169609, 827245, 702826, 740432, 467843, 8570, 519706, 784040, 839829, 446917, 973292, 456340, 945872, 631183, 594844, 135681, 428383, 699250, 174068, 756217, 598868, 850543, 722592, 104098, 600998, 75864, 399295, 132731, 763836, 517644, 61615, 706507, 552641, 482134, 358059, 527833, 319056, 376503, 832193, 323065, 533464, 256945, 374617, 448726, 94987, 917378, 30068, 729349, 65062, 830479]);
});
